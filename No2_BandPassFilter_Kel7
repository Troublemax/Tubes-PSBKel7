% Filter Band-pass FIR, window hamming, fc 25 Hz - 150 Hz
function filtered_signal = enhanced_lowpass_filter(input_file, output_file, cutoff_freq_low, cutoff_freq_high)
   
    if nargin < 4
        cutoff_freq_low = 25;  % Lower cutoff for high-pass filter
        cutoff_freq_high = 150; % Upper cutoff for low-pass filter
    end

    % Membaca file audio
    [data, fs] = audioread(input_file);

    % Mengonversi stereo ke mono
    if size(data, 2) > 1
        data = mean(data, 2);
    end

    % Membuat vektor waktu untuk plotting
    t = (0:length(data)-1) / fs;

    % Design bandpass filter memakai FIR
    nyquist = fs / 2;
    normalized_cutoff_low = cutoff_freq_low / nyquist;
    normalized_cutoff_high = cutoff_freq_high / nyquist;
    N = 2048;  % Panjang filter

    % Design bandpass filter
    h_bandpass = fir1(N-1, [normalized_cutoff_low, normalized_cutoff_high], 'bandpass', hamming(N));

    % Apply filter ke sinyal menggunakan metode zero-phase filtering
    filtered_signal = filtfilt(h_bandpass, 1, data);

    % Normalisasi Sinyal
    filtered_signal = filtered_signal / max(abs(filtered_signal));

    % Figure untuk plotting
    figure('Position', [100 100 800 600]);

    % Plot original signal
    subplot(3,1,1);
    plot(t, data);
    title('Original PCG Signal');
    xlabel('Time (s)');
    ylabel('Amplitude');
    grid on;

    % Plot filtered signal
    subplot(3,1,2);
    plot(t, filtered_signal);
    title(['Filtered PCG Signal (Band-pass ', num2str(cutoff_freq_low), '-', num2str(cutoff_freq_high), ' Hz)']);
    xlabel('Time (s)');
    ylabel('Amplitude');
    grid on;

    % Zoomed-in plot
    subplot(3,1,3);
    zoom_start = 5; % Start time for zoom (s)
    zoom_end = 10;   % End time for zoom (s)
    zoom_indices = (t >= zoom_start & t <= zoom_end);
    plot(t(zoom_indices), filtered_signal(zoom_indices));
    title('Zoomed-in View of PCG Signal (S1-S4)');
    xlabel('Time (s)');
    ylabel('Amplitude');
    grid on;

    % Save audio hasil filter
    audiowrite(output_file, filtered_signal, fs);
end

% Memamnggil fungsi
input_file = 'a0001.wav';       
output_file = 'filtered_pcg_enhanceda.wav';   
cutoff_freq_low = 25;          % Lower cutoff frequency bandpass filter
cutoff_freq_high = 200;        % Upper cutoff frequency bandpass filter

% Memanggil Fungsi dan Menyimpan hasilnya
filtered_signal = enhanced_lowpass_filter(input_file, output_file, cutoff_freq_low, cutoff_freq_high);
